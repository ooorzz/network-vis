{"version":3,"file":"js/app.4eb51835.js","mappings":"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","sources":["webpack://siemens-component/./src/App.vue","webpack://siemens-component/./src/components/TopLevel.vue","webpack://siemens-component/./src/components/TopLevel.vue?7ede","webpack://siemens-component/./src/App.vue?7ccd","webpack://siemens-component/./src/store/index.js","webpack://siemens-component/./src/main.js","webpack://siemens-component/webpack/bootstrap","webpack://siemens-component/webpack/runtime/chunk loaded","webpack://siemens-component/webpack/runtime/compat get default export","webpack://siemens-component/webpack/runtime/define property getters","webpack://siemens-component/webpack/runtime/global","webpack://siemens-component/webpack/runtime/hasOwnProperty shorthand","webpack://siemens-component/webpack/runtime/jsonp chunk loading","webpack://siemens-component/webpack/startup"],"sourcesContent":["<template>\n    <TopLevel></TopLevel>\n    <!-- <nav>\n        <router-link to=\"/top-level\">Top-Level</router-link>\n    </nav>\n    <router-view /> -->\n</template>\n\n\n<script>\nimport TopLevel from './components/TopLevel.vue';\n\nexport default {\n    name: 'App',\n    components: {\n        TopLevel\n    }\n}\n</script>\n\n<style lang=\"scss\">\n#app {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-align: center;\n    color: #2c3e50;\n}\n\nnav {\n    padding: 30px;\n\n    a {\n        font-weight: bold;\n        color: #2c3e50;\n\n        &.router-link-exact-active {\n            color: #42b983;\n        }\n    }\n}\n</style>\n","<template>\r\n    <div>\r\n        <button @click=\"Componentcombine()\">Combine Node</button>\r\n        <button @click=\"switchlevel()\">Switch Level</button>\r\n        <button @click=\"splitcom()\">Split Component</button>\r\n        <button @click=\"Rename()\">Rename Component</button>\r\n        <button v-if=\"newflag\" @click=\"backtoComponent()\">Back</button>\r\n        <p>{{ message }}</p>\r\n        <div ref=\"chartContainer\" :key=\"componentKey\">\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport * as d3 from 'd3';\r\nexport default {\r\n    name: 'TopLevel',\r\n    data() {\r\n        return {\r\n            nodesIN: null,\r\n            linksIN: null,\r\n            listall: null,\r\n            simulation: null,\r\n            svgWidth: 1400,\r\n            svgHeight: 800,\r\n            nodeRadius: 16,\r\n            flag: true,\r\n            newflag: false,        //是否显示back按键\r\n            componentKey: 0,\r\n            selectedNodes: [],\r\n            componentNum: 0,\r\n            message: \"Component Level\",\r\n            timer: null,\r\n            isCtrlKeyPressed: false,\r\n            flagselect: false,\r\n        };\r\n    },\r\n    async mounted() {\r\n        try {\r\n            const style = document.createElement('style');\r\n            style.innerHTML = `\r\n                svg *{\r\n                    user-select: none;\r\n                }\r\n            `;\r\n            document.head.appendChild(style);\r\n            const response1 = await fetch(`${this.$basePath}assets/FB1.json`);\r\n            if (!response1.ok) throw new Error('Network response was not ok');\r\n            const graphData1 = await response1.json();\r\n            let nodes2 = graphData1.nodes.map(d => ({ ...d }));\r\n            let links2 = graphData1.links.map(d => ({ ...d }));\r\n            const response2 = await fetch(`${this.$basePath}assets/festo.json`);\r\n            if (!response2.ok) throw new Error('Network response was not ok');\r\n            const graphData2 = await response2.json();\r\n            let nodes1 = graphData2.nodes.map(d => ({ ...d }));\r\n            let links1 = graphData2.links.map(d => ({ ...d }));\r\n            this.listall = [{ \"keyid\": \"ComponentLevel\", \"nodes\": nodes1, \"links\": links1 }]\r\n            links2 = links2.filter(d => {\r\n                // 根据您的要求进行过滤\r\n                return (d.source !== \"FB1\" && d.target !== \"FB1\"); // 这里示例删除 ID 为 2 的节点\r\n            });\r\n            nodes2 = nodes2.filter(d => {\r\n                // 根据您的要求进行过滤\r\n                return d.id !== \"FB1\"; // 这里示例删除 ID 为 2 的节点\r\n            });\r\n            this.linksIN = links2;\r\n            this.nodesIN = nodes2;\r\n            this.renderChart();\r\n            let midvar = { \"keyid\": \"ButtomLevel\", \"nodes\": this.nodesIN, \"links\": this.linksIN }\r\n            this.listall.push(midvar)\r\n            this.linksIN = links1;\r\n            this.nodesIN = nodes1;\r\n            this.clearGraph();\r\n            this.renderChart();\r\n            const response3 = await fetch(`${this.$basePath}assets/FB.json`);\r\n            if (!response3.ok) throw new Error('Network response was not ok');\r\n            const graphData3 = await response3.json();\r\n            let nodes3 = graphData3.nodes.map(d => ({ ...d }));\r\n            let links3 = graphData3.links.map(d => ({ ...d }));\r\n            midvar = { \"keyid\": \"FB1\", \"nodes\": nodes3, \"links\": links3 }\r\n            this.listall.push(midvar)\r\n        } catch (error) {\r\n            console.error(\"Failed to fetch graph data: \", error);\r\n        }\r\n        let startLoc = [];\r\n        const svg = d3.select(this.$refs.chartContainer)\r\n        let rect;\r\n        svg.on('mousedown', (event) => {\r\n            rect = d3.select('#squareSelect');\r\n            rect.attr('transform', `translate(${event.offsetX},${event.offsetY})`)\r\n            startLoc = [event.offsetX, event.offsetY];\r\n            this.flagselect = true;\r\n        })\r\n\r\n        svg.on('mousemove', (event) => {\r\n            if (this.flagselect) {\r\n                rect = d3.select('#squareSelect');\r\n                var width = event.offsetX - startLoc[0];\r\n                var height = event.offsetY - startLoc[1];\r\n                if (width < 0 && height < 0) {\r\n                    width = Math.abs(width);\r\n                    height = Math.abs(height);\r\n                    rect.attr('transform', `translate(${event.offsetX},${event.offsetY})`)\r\n                }\r\n                else if (width < 0) {\r\n                    width = Math.abs(width);\r\n                    rect.attr('transform', `translate(${event.offsetX},${startLoc[1]})`)\r\n                }\r\n                else if (height < 0) {\r\n                    height = Math.abs(height);\r\n                    rect.attr('transform', `translate(${startLoc[0]},${event.offsetY})`)\r\n                }\r\n                rect.attr('width', width)\r\n                    .attr('height', height)\r\n            }\r\n        })\r\n\r\n        svg.on(\"mouseup\", (event) => {\r\n            if (this.flagselect) {\r\n                rect = d3.select('#squareSelect');\r\n                this.flagselect = false;\r\n                var endLoc = [event.offsetX, event.offsetY];\r\n                var leftTop = [];\r\n                var rightBottom = [];\r\n                if (endLoc[0] >= startLoc[0]) {\r\n                    leftTop[0] = startLoc[0];\r\n                    rightBottom[0] = endLoc[0];\r\n                }\r\n                else {\r\n                    leftTop[0] = endLoc[0];\r\n                    rightBottom[0] = startLoc[0];\r\n                }\r\n\r\n                if (endLoc[1] >= startLoc[1]) {\r\n                    leftTop[1] = startLoc[1];\r\n                    rightBottom[1] = endLoc[1];\r\n                }\r\n                else {\r\n                    leftTop[1] = endLoc[1];\r\n                    rightBottom[1] = startLoc[1];\r\n                }\r\n                var selectedNodes11 = d3.selectAll('circle').filter(function (d) {\r\n                    return d.x >= leftTop[0] && d.x <= rightBottom[0] && d.y >= leftTop[1] && d.y <= rightBottom[1];\r\n                })\r\n                console.log(selectedNodes11.data())\r\n                let midselectedNodes = (d3.selectAll('rect').filter(function (d) {\r\n                    if (d !== undefined) {\r\n                        return d.x >= leftTop[0] && d.x <= rightBottom[0] && d.y >= leftTop[1] && d.y <= rightBottom[1];\r\n                    }\r\n                    return false;\r\n                }))\r\n                midselectedNodes = midselectedNodes.data()\r\n                rect.remove();\r\n                selectedNodes11 = selectedNodes11.data().filter(d => {\r\n                    return d.group !== 1 && d.group !== 2 && d.group !== 4;\r\n                });\r\n                let len = this.selectedNodes.length;\r\n                for (let i = 0; i < len; i++) {\r\n                    for (let j = 0; j < selectedNodes11.length; j++) {\r\n                        if (selectedNodes11[j].id === this.selectedNodes[i].id) {\r\n                            this.selectedNodes.splice(i, 1);\r\n                            selectedNodes11.splice(j, 1);\r\n                            i--;\r\n                            len--;\r\n                            break;\r\n                        }\r\n                    }\r\n                    for (let j = 0; j < midselectedNodes.length; j++) {\r\n                        if (midselectedNodes[j].id === this.selectedNodes[i].id) {\r\n                            this.selectedNodes.splice(i, 1);\r\n                            midselectedNodes.splice(j, 1);\r\n                            i--;\r\n                            len--;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                for (let i = 0; i < selectedNodes11.length; i++) {\r\n                    this.selectedNodes.push(selectedNodes11[i])\r\n                }\r\n                for (let i = 0; i < midselectedNodes.length; i++) {\r\n                    this.selectedNodes.push(midselectedNodes[i])\r\n                }\r\n                console.log(this.selectedNodes)\r\n                this.repointflag = true;\r\n                this.clearGraph();\r\n                this.renderChart();\r\n                rect = d3.select('#squareSelect');\r\n            }\r\n        })\r\n    },\r\n    methods: {\r\n        renderChart() {\r\n            if (this.listall) {\r\n                console.log(\"data ok!\")\r\n                // const width = 1200;\r\n                // const height = 600;\r\n                // const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n                const margin = 120;\r\n                // The force simulation mutates links and nodes, so create a copy\r\n                // so that re-evaluating this cell produces the same result.\r\n                var links = this.linksIN;\r\n                var nodes = this.nodesIN;\r\n                let height1 = this.svgHeight - 100;\r\n                let spacing = 60;\r\n                //const maxCnt = Math.max(nodes.filter(node => node.group === 1).length, nodes.filter(node => node.group === 2).length)\r\n                nodes.forEach((d) => {\r\n                    // 把group为1的结点固定在最左侧\r\n                    if (d.group === 1) {\r\n                        d.fx = margin; // 固定 x 坐标在最左侧\r\n                        const group1Nodes = nodes.filter(node => node.group === 1);\r\n                        spacing = Math.ceil(height1 / group1Nodes.length)\r\n                        // const spacing = this.svgHeight / (group1Nodes.length + 1);\r\n                        d.fy = spacing * (group1Nodes.indexOf(d) + 1); // 计算均匀分布的 y 坐标\r\n                        //    leftHeight= spacing *(group1Nodes.length + 1);\r\n                        //     d.fy = spacing * (group1Nodes.indexOf(d) + 1);\r\n                    }\r\n                    // 把group为2的结点固定在最右侧\r\n                    if (d.group === 2) {\r\n                        d.fx = this.svgWidth - margin; // 固定 x 坐标在最右侧\r\n                        const group2Nodes = nodes.filter(node => node.group === 2);\r\n                        spacing = Math.floor(height1 / group2Nodes.length)\r\n                        d.fy = spacing * (group2Nodes.indexOf(d) + 1);  // 计算均匀分布的 y 坐标\r\n                        // rightHeight= spacing *(group2Nodes.length + 1);\r\n                        // d.fy = spacing * (group2Nodes.indexOf(d) + 1);\r\n                    }\r\n                });\r\n                // console.log(nodes)\r\n\r\n                //将节点的group做分类\r\n                let midnode = null;\r\n                let midIndex = 0;\r\n                for (let i = 0; i < this.selectedNodes.length; i++) {\r\n                    midnode = nodes.filter(d => {\r\n                        return d.id === this.selectedNodes[i].id\r\n                    })\r\n                    if (midnode[0].group === 3) {\r\n                        midIndex = nodes.indexOf(midnode[0]);\r\n                        nodes[midIndex].group = 7\r\n                    }\r\n                    else if (midnode[0].group === 5) {\r\n                        midIndex = nodes.indexOf(midnode[0]);\r\n                        nodes[midIndex].group = 8\r\n                    }\r\n                    else if (midnode[0].group === 6) {\r\n                        midIndex = nodes.indexOf(midnode[0]);\r\n                        nodes[midIndex].group = 9\r\n                    }\r\n                }\r\n                // 定义了一个力学模拟，在每个tick步骤的时候运行ticked函数\r\n                this.simulation = d3.forceSimulation(nodes)\r\n                    // 这里用distance属性使连线变长\r\n                    .force(\"link\", d3.forceLink(links).id(d => d.id).distance(50))\r\n                    .force(\"charge\", d3.forceManyBody())\r\n                    .force(\"collide\", d3.forceCollide(this.nodeRadius))\r\n                    // .force(\"center\", d3.forceCenter(this.svgWidth / 2, this.svgHeight / 2))\r\n                    // .force(\"boundingBox\", this.boundingBoxForce())\r\n                    .on(\"tick\", this.ticked);\r\n\r\n                const svg = d3.select(this.$refs.chartContainer) //选择文档中的chartContainer元素\r\n                    .append('svg') //添加一个svg元素\r\n                    .attr(\"width\", this.svgWidth)\r\n                    .attr(\"height\", this.svgHeight)\r\n                    .attr(\"viewBox\", [0, 0, this.svgWidth, this.svgHeight])\r\n                    .attr(\"style\", \"max-width: 100%; height: auto;\");\r\n\r\n                svg\r\n                    .append('defs')\r\n                    .append('marker')\r\n                    .attr('id', 'arrow')\r\n                    .attr('viewBox', [0, 0, 10, 10])\r\n                    .attr('refX', 5)\r\n                    .attr('refY', 5)\r\n                    .attr('markerWidth', 5)\r\n                    .attr('markerHeight', 5)\r\n                    .attr('orient', 'auto')\r\n                    .append('path')\r\n                    .attr('d', 'M 0 ,0 L 0,10 L 10, 5')\r\n                    .attr('fill', 'black');\r\n\r\n                // 创建一个节点组来包含线段和文本\r\n                const link = svg.append(\"g\")//g表示group，一个容器元素，用于将很多svg元素组合到一起\r\n                    .selectAll('g')\r\n                    .data(links)//绑定links数组\r\n                    .join('g');\r\n\r\n                // 在线段组中添加线段\r\n                link.append(\"line\")\r\n                    .attr(\"stroke\", \"#999\")\r\n                    .attr(\"stroke-opacity\", 0.6)\r\n                // .attr(\"marker-end\", \"url(#arrowhead)\"); // 应用箭头 marker\r\n                // 在线段组中添加线段\r\n                link.append(\"line\")\r\n                    .attr(\"stroke\", \"#999\")\r\n                    .attr(\"stroke-opacity\", 0.6)\r\n                    .attr('marker-end', 'url(#arrow)'); // 在 line 的结束处添加箭头\r\n                // 在线段组中添加文本\r\n                //link.append(\"text\")\r\n                //.attr('class', 'text-link')\r\n                // .attr(\"text-anchor\", \"middle\") // 水平居中\r\n                //.attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                //.style('fill', \"black\") // 设置字体颜色\r\n                //.style('font-size', '10px') // 设置字体大小\r\n                //.style('font-family', 'Times New Roman') // 设置字体\r\n                //.style('font-style', 'italic')\r\n                //.text(d => d.linkName); // 设置文本内容\r\n                // 创建一个节点组来包含圆和文本\r\n                const node = svg.append(\"g\")\r\n                    .attr(\"class\", \"nodes\") // 给组添加一个类，以便我们可以引用它\r\n                    .selectAll(\"g\")\r\n                    .data(nodes)\r\n                    .join(\"g\") // 为每个节点数据创建一个'g'元素\r\n                    .join(\"selectedNodes\")\r\n                    .on('click', this.handleNodeClick)\r\n                    .on('dblclick', this.handleNodeDoubleClick);\r\n                //根据节点的group生成节点形状与颜色\r\n                node.each(function (d) {\r\n                    if (d.group === 1) {\r\n                        d3.select(this).append(\"circle\").attr(\"fill\", \"#1f77b4\")\r\n                    }\r\n                    else if (d.group === 2) {\r\n                        d3.select(this).append(\"circle\").attr(\"fill\", \"green\")\r\n                    }\r\n                    else if (d.group === 3) {\r\n                        d3.select(this).append(\"circle\").attr(\"fill\", \"white\")\r\n                    }\r\n                    else if (d.group === 4) {\r\n                        d3.select(this).append(\"circle\").attr(\"fill\", \"#fff2cc\")\r\n                    }\r\n                    else if (d.group === 5) {\r\n                        d3.select(this).append(\"circle\").attr(\"fill\", \"#FFE4E1\")\r\n                    }\r\n                    else if (d.group === 7 || d.group === 8) {\r\n                        d3.select(this).append(\"circle\").attr(\"fill\", \"#708090\")\r\n                    }\r\n                    // 给属于group6的节点添加矩形\r\n                    else if (d.group === 6) {\r\n                        d3.select(this).append(\"rect\")\r\n                            .attr(\"width\", 50)\r\n                            .attr(\"height\", 30)\r\n                            .attr(\"x\", d.x - 25)\r\n                            .attr(\"x\", d.y - 15)\r\n                            .attr(\"fill\", \"orange\")\r\n                            .attr(\"stroke\", \"black\")\r\n                            .attr('class', 'Component')\r\n                            .attr(\"stroke-width\", 1.5);\r\n                    }\r\n                    else if (d.group === 9) {\r\n                        d3.select(this).append(\"rect\")\r\n                            .attr(\"width\", 50)\r\n                            .attr(\"height\", 30)\r\n                            .attr(\"x\", d.x - 25)\r\n                            .attr(\"x\", d.y - 15)\r\n                            .attr(\"fill\", \"#708090\")\r\n                            .attr(\"stroke\", \"black\")\r\n                            .attr('class', 'Component')\r\n                            .attr(\"stroke-width\", 1.5);\r\n                    }\r\n                });\r\n                // 对所有圆批量设置格式\r\n                const allCircle = this.$refs.chartContainer.querySelectorAll('circle');\r\n                allCircle.forEach(cc => {\r\n                    cc.setAttribute(\"stroke\", \"black\");\r\n                    cc.setAttribute(\"stroke-width\", 1.5);\r\n                    cc.setAttribute(\"r\", 16);\r\n                });\r\n\r\n                // 在节点组中添加文本\r\n                node.append(\"text\")\r\n                    .attr('class', 'text-inner')\r\n                    .attr('x', d => d.x)\r\n                    .attr('y', d => d.y)\r\n                    .attr(\"text-anchor\", \"middle\") // 水平居中\r\n                    .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                    .style('font-size', '10px') // 设置字体大小\r\n                    .style('fill', d => this.assignTextColor(d))\r\n                    .text(d => d.title); // 将节点数据的id设置为文本内容\r\n\r\n                node.each(function (d) {\r\n                    // 给属于group1的节点组中根据条件添加第二个文本，位于圆形的左侧\r\n                    if (d.group === 1) {\r\n                        d3.select(this).append(\"text\")\r\n                            .attr(\"text-anchor\", \"end\") // 文本靠右侧对齐\r\n                            .attr('class', 'text-left')\r\n                            .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                            .style('font-size', '10px') // 设置字体大小\r\n                            .style('fill', \"black\") // 设置字体颜色\r\n                            .style('font-family', 'Times New Roman') // 设置字体\r\n                            .style('font-weight', 'bold')\r\n                            .text(d => d.name); // 设置文本内容\r\n                    }\r\n                    // 给属于group2的节点组中根据条件添加第二个文本，位于圆形的右侧\r\n                    if (d.group === 2) {\r\n                        d3.select(this).append(\"text\")\r\n                            .attr(\"text-anchor\", \"start\") // 文本靠右侧对齐\r\n                            .attr('class', 'text-right')\r\n                            .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                            .style('font-size', '10px') // 设置字体大小\r\n                            .style('fill', \"black\") // 设置字体颜色\r\n                            .style('font-family', 'Times New Roman') // 设置字体\r\n                            .style('font-weight', 'bold')\r\n                            .text(d => d.name); // 设置文本内容\r\n                    }\r\n                    // // 给属于group2的节点组中根据条件添加第二个文本，位于圆形的右侧\r\n                    // if (d.group === 2) {\r\n                    //     d3.select(this).append(\"text\")\r\n                    //         .attr(\"text-anchor\", \"middle\") // 文本靠右侧对齐\r\n                    //         .attr('class', 'text-bottom')\r\n                    //         .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                    //         .style('font-size', '10px') // 设置字体大小\r\n                    //         .style('fill', \"black\") // 设置字体颜色\r\n                    //         .style('font-family', 'Times New Roman') // 设置字体\r\n                    //         .style('font-weight', 'bold')\r\n                    //         .text(d => d.name); // 设置文本内容\r\n                    // }\r\n                });\r\n\r\n                // 添加拖拽行为，包含开始、进行和结束时的行为\r\n                node.call(d3.drag()\r\n                    .on(\"start\", this.dragstarted)\r\n                    .on(\"drag\", this.dragged)\r\n                    .on(\"end\", this.dragended));\r\n\r\n                //鼠标框选功能\r\n                svg.append('rect')\r\n                    .attr('width', 0)\r\n                    .attr('height', 0)\r\n                    .attr('fill', 'rgba(33,20,50,0.3)')\r\n                    .attr(\"stroke\", \"#ccc\")\r\n                    .attr(\"stroke-width\", \"2px\")\r\n                    .attr('class', 'SelectRect')\r\n                    .attr(\"transform\", \"translate(0,0)\")\r\n                    .attr(\"id\", 'squareSelect');\r\n                //将节点的group还原\r\n                for (let i = 0; i < this.selectedNodes.length; i++) {\r\n                    midnode = nodes.filter(d => {\r\n                        return d.id === this.selectedNodes[i].id\r\n                    })\r\n                    if (midnode[0].group === 7) {\r\n                        midIndex = nodes.indexOf(midnode[0]);\r\n                        nodes[midIndex].group = 3\r\n                    }\r\n                    else if (midnode[0].group === 8) {\r\n                        midIndex = nodes.indexOf(midnode[0]);\r\n                        nodes[midIndex].group = 5\r\n                    }\r\n                    else if (midnode[0].group === 9) {\r\n                        midIndex = nodes.indexOf(midnode[0]);\r\n                        nodes[midIndex].group = 6\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        Componentcombine() {\r\n            let links1 = JSON.parse(JSON.stringify(this.listall[0].links));\r\n            let nodes1 = JSON.parse(JSON.stringify(this.listall[0].nodes))\r\n            let links1co = JSON.parse(JSON.stringify(links1))\r\n            for (let i = 0; i < nodes1.length; i++) { //将未被选中的节点添加进去\r\n                if (this.selectedNodes.indexOf(nodes1[i]) === -1) {\r\n                    let Outflag = 0;\r\n                    let Inflag = 0;\r\n                    for (let j = 0; j < links1.length; j++) {\r\n                        if (links1[j].source.id === nodes1[i].id) {\r\n                            for (let k = 0; k < this.selectedNodes.length; k++) {\r\n                                console.log('1')\r\n                                if (this.selectedNodes[k].id === links1[j].target.id) {\r\n                                    Outflag += 1;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (links1[j].target.id === nodes1[i].id) {\r\n                            for (let k = 0; k < this.selectedNodes.length; k++) {\r\n                                console.log('2')\r\n                                if (this.selectedNodes[k].id === links1[j].source.id) {\r\n                                    Inflag += 1;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (Inflag > 0 && Outflag > 0) {\r\n                        let comparenode = this.selectedNodes.filter(d => {\r\n                            return d.id === nodes1[i].id\r\n                        })\r\n                        if (comparenode.length === 0) {\r\n                            this.selectedNodes.push(nodes1[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            console.log(this.selectedNodes)\r\n            this.selectedNodes = this.selectedNodes.filter(d => {\r\n                return d.group !== 6 && d.group !== 9;\r\n            });\r\n            if (this.selectedNodes.length === 0) {\r\n                return\r\n            }\r\n            for (let i = 0; i < this.selectedNodes.length; i++) {\r\n                if (this.selectedNodes[i].group !== 1 && this.selectedNodes[i].group !== 2) {\r\n                    this.selectedNodes[i].index = i;\r\n                    delete this.selectedNodes[i].fx;\r\n                    delete this.selectedNodes[i].fy;\r\n                }\r\n            }\r\n            //命名，生成新的节点名称\r\n            this.componentNum += 1;\r\n            let Numstr = String(this.componentNum);\r\n            let nameforcom = \"Com\".concat(Numstr);\r\n            let addele = { \"id\": nameforcom, \"title\": \"Com\", \"group\": 6 };\r\n            let linksadd = [];\r\n            let nodescompare = nodes1;\r\n            nodescompare.push(addele);\r\n            let linkscompare = links1;\r\n            //比较连线\r\n            for (let i = 0; i < this.selectedNodes.length; i++) {\r\n                for (let j = 0; j < links1.length; j++) {\r\n                    if (this.selectedNodes[i].id === links1[j].target.id) {\r\n                        for (let k = 0; k < nodes1.length; k++) {\r\n                            if (links1[j].source.id === nodes1[k].id) {\r\n                                let pertoadd = { \"source\": nodes1[k], \"target\": addele };\r\n                                linkscompare.push(pertoadd);\r\n                                linkscompare.splice(j, 1);\r\n                                j--;\r\n                                break;\r\n                            }\r\n                        }\r\n                        continue;\r\n                    }\r\n                    if (this.selectedNodes[i].id === links1[j].source.id) {\r\n                        for (let k = 0; k < nodes1.length; k++) {\r\n                            if (links1[j].target.id === nodes1[k].id) {\r\n                                let pertoadd = { \"source\": addele, \"target\": nodes1[k] };\r\n                                linkscompare.push(pertoadd);\r\n                                linkscompare.splice(j, 1);\r\n                                j--;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                for (let j = 0; j < nodescompare.length; j++) {\r\n                    if (this.selectedNodes[i].id === nodescompare[j].id) {\r\n                        nodescompare.splice(j, 1);\r\n                        j--;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            let midnode = null;\r\n            for (let i = 0; i < linkscompare.length; i++) {\r\n                midnode = nodescompare.filter(d => {\r\n                    return d.id === linkscompare[i].source.id\r\n                })\r\n                if (midnode.length > 0.5) {\r\n                    linkscompare[i].source = midnode[0]\r\n                }\r\n                midnode = nodescompare.filter(d => {\r\n                    return d.id === linkscompare[i].target.id\r\n                })\r\n                if (midnode.length > 0.5) {\r\n                    linkscompare[i].target = midnode[0]\r\n                }\r\n            }\r\n            this.listall[0].links = linkscompare;\r\n            this.listall[0].nodes = nodescompare\r\n            let Startnum = 1;\r\n            let Endnum = 1;\r\n            for (let i = 0; i < this.selectedNodes.length; i++) {\r\n                delete this.selectedNodes[i].fx\r\n                delete this.selectedNodes[i].fx\r\n            }\r\n            let Nodessave = JSON.parse(JSON.stringify(this.selectedNodes));\r\n            let addnode = null;\r\n            //创造连线\r\n            for (let i = 0; i < this.selectedNodes.length; i++) {\r\n                for (let j = 0; j < links1co.length; j++) {\r\n                    if (links1co[j].target.id === this.selectedNodes[i].id) {\r\n                        midnode = this.selectedNodes.filter(d => {\r\n                            return links1co[j].source.id === d.id\r\n                        })\r\n                        if (links1co[j].source.group === 1) {\r\n                            let addname = \"?B\".concat(String(Startnum));\r\n                            addnode = { \"id\": addname, \"title\": addname, \"name\": links1co[j].source.name, \"group\": 1 }\r\n                            Nodessave.push(addnode)\r\n                            linksadd.push({ \"source\": addnode, \"target\": this.selectedNodes[i] })\r\n                            Startnum++;\r\n                        }\r\n                        else if (midnode.length < 0.5) {\r\n                            let addname = \"?B\".concat(String(Startnum));\r\n                            addnode = { \"id\": addname, \"title\": addname, \"group\": 1 }\r\n                            Nodessave.push(addnode)\r\n                            linksadd.push({ \"source\": addnode, \"target\": this.selectedNodes[i] })\r\n                            Startnum++;\r\n                        }\r\n                        else if (midnode.length > 0.5) {\r\n                            linksadd.push({ \"source\": midnode[0], \"target\": this.selectedNodes[i] })\r\n                        }\r\n                    }\r\n                    else if (links1co[j].source.id === this.selectedNodes[i].id) {\r\n                        midnode = this.selectedNodes.filter(d => {\r\n                            return links1co[j].target.id === d.id\r\n                        })\r\n                        if (links1co[j].target.group === 1) {\r\n                            let addname = \"!B\".concat(String(Endnum));\r\n                            addnode = { \"id\": addname, \"title\": addname, \"name\": links1co[j].target.name, \"group\": 2 }\r\n                            Nodessave.push(addnode)\r\n                            linksadd.push({ \"source\": this.selectedNodes[i], \"target\": addnode })\r\n                            Endnum++;\r\n                        }\r\n                        if (midnode.length < 0.5) {\r\n                            let addname = \"!B\".concat(String(Endnum));\r\n                            addnode = { \"id\": addname, \"title\": addname, \"group\": 2 }\r\n                            Nodessave.push(addnode)\r\n                            linksadd.push({ \"source\": this.selectedNodes[i], \"target\": addnode })\r\n                            Endnum++;\r\n                        }\r\n                        else if (midnode.length > 0.5) {\r\n                            linksadd.push({ \"source\": this.selectedNodes[i], \"target\": midnode[0] })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            linksadd = linksadd.filter(d => {\r\n                return d.source.id !== d.target.id\r\n            })\r\n            for (let i = 0; i < linksadd.length; i++) {\r\n                for (let j = i + 1; j < linksadd.length; j++) {\r\n                    if (linksadd[i].source === linksadd[j].source && linksadd[i].target === linksadd[j].target) {\r\n                        linksadd.splice(j, 1)\r\n                        break;\r\n                    }\r\n                }\r\n                midnode = Nodessave.filter(d => {\r\n                    return d.id === linksadd[i].source.id\r\n                })\r\n                linksadd[i].source = midnode[0]\r\n                midnode = Nodessave.filter(d => {\r\n                    return d.id === linksadd[i].target.id\r\n                })\r\n                linksadd[i].target = midnode[0]\r\n            }\r\n            for (let j = 0; j < linksadd; j++) {\r\n                delete linksadd[j].source.x;\r\n                delete linksadd[j].source.y;\r\n                delete linksadd[j].source.vx;\r\n                delete linksadd[j].source.vy;\r\n                delete linksadd[j].source.fx;\r\n                delete linksadd[j].source.fy;\r\n                delete linksadd[j].target.x;\r\n                delete linksadd[j].target.y;\r\n                delete linksadd[j].target.vx;\r\n                delete linksadd[j].target.vy;\r\n                delete linksadd[j].target.fx;\r\n                delete linksadd[j].target.fy;\r\n            }\r\n            for (let j = 0; j < Nodessave; j++) {\r\n                delete Nodessave[j].x;\r\n                delete Nodessave[j].y;\r\n                delete Nodessave[j].vx;\r\n                delete Nodessave[j].vy;\r\n                delete Nodessave[j].fx;\r\n                delete Nodessave[j].fy;\r\n            }\r\n            this.listall.push({ \"keyid\": nameforcom, \"nodes\": Nodessave, \"links\": linksadd })\r\n            this.selectedNodes = [];\r\n            if (this.flag) {\r\n                this.clearGraph();\r\n                this.linksIN = linkscompare;\r\n                this.nodesIN = nodescompare;\r\n                this.svgWidth = 1400;\r\n                this.svgHeight = 800;\r\n                this.newflag = false;\r\n                this.message = \"Component Level\";\r\n                this.renderChart();\r\n            }\r\n        },\r\n        handleNodeClick(_, d) {\r\n            clearTimeout(this.timer)\r\n            // 点击事件处理逻辑\r\n            this.timer = setTimeout(() => {\r\n                let rerend = false;\r\n                let isSelected = false;\r\n                for (let i = 0; i < this.selectedNodes.length; i++) {\r\n                    if (this.selectedNodes[i].id === d.id) {\r\n                        isSelected = true;\r\n                        rerend = true;\r\n                        this.selectedNodes.splice(i, 1); // 如果节点已经被选中，从选中列表中移除它\r\n                        break;\r\n                    }\r\n                }\r\n                if (!isSelected && (d.group > 2.5 && d.group !== 4)) {\r\n                    rerend = true;\r\n                    this.selectedNodes.push(d); // 否则，将节点添加到选中列表中\r\n                }\r\n                console.log(this.selectedNodes)\r\n                if (rerend) {\r\n                    this.clearGraph();\r\n                    this.renderChart();\r\n                }\r\n            }, 250);\r\n        },\r\n\r\n        handleNodeDoubleClick(_, d) {\r\n            // 双击点击事件处理逻辑\r\n            clearTimeout(this.timer);\r\n            this.selectedNodes = [];\r\n            if (d.group !== 6) {\r\n                return\r\n            }\r\n            for (let i = 0; i < this.listall.length; i++) {\r\n                if (this.listall[i].keyid === d.id) {\r\n                    this.linksIN = this.listall[i].links;\r\n                    this.nodesIN = this.listall[i].nodes;\r\n                    this.svgHeight = 800;\r\n                    this.svgWidth = 1400;\r\n                    this.newflag = true;\r\n                    this.message = \"Component Level -> \".concat(this.listall[i].keyid);\r\n                    this.clearGraph();\r\n                    this.renderChart();\r\n                    return\r\n                }\r\n            }\r\n        },\r\n\r\n        Rename() {\r\n            let willberename = this.selectedNodes.filter(d => {\r\n                return d.group === 6;\r\n            });\r\n            if (willberename.length === 0) {\r\n                return\r\n            }\r\n            let newname = prompt(\"Please enter the new name\", \"Com\");\r\n            if (newname === null) {\r\n                return\r\n            }\r\n            for (let i = 0; i < willberename.length; i++) {\r\n                for (let k = 0; k < this.listall.length; k++) {\r\n                    if (this.listall[k].keyid === willberename[i].id) {\r\n                        this.listall[k].keyid = newname;\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 0; i < willberename.length; i++) {\r\n                for (let k = 0; k < this.listall[0].nodes.length; k++) {\r\n                    if (this.listall[0].nodes[k].id === willberename[i].id) {\r\n                        this.listall[0].nodes[k].id = newname;\r\n                        this.listall[0].nodes[k].title = newname;\r\n                        for (let j = 0; j < this.listall[0].links.length; j++) {\r\n                            if (this.listall[0].links[j].source.id === willberename[i].id) {\r\n                                this.listall[0].links[j].source.id = newname;\r\n                                this.listall[0].links[j].source.title = newname;\r\n                            }\r\n                            else if (this.listall[0].links[j].target.id === willberename[i].id) {\r\n                                this.listall[0].links[j].target.id = newname;\r\n                                this.listall[0].links[j].target.title = newname;\r\n                            }\r\n                        }\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n            this.selectedNodes = [];\r\n            this.clearGraph();\r\n            this.renderChart();\r\n        },\r\n\r\n        splitcom() {\r\n            let willbesplited = this.selectedNodes.filter(d => {\r\n                return d.group === 6;\r\n            });\r\n            if (willbesplited.length === 0) {\r\n                return\r\n            }\r\n            let links1 = JSON.parse(JSON.stringify(this.listall[0].links));\r\n            let links2 = JSON.parse(JSON.stringify(this.listall[1].links));\r\n            let nodes1 = JSON.parse(JSON.stringify(this.listall[0].nodes));\r\n            let cycflag = false;\r\n            let midlink = null;\r\n            let midnode = null;\r\n            for (let i = 0; i < willbesplited.length; i++) {\r\n                for (let k = 0; k < this.listall.length; k++) {\r\n                    if (this.listall[k].keyid === willbesplited[i].id) {\r\n                        cycflag = true;\r\n                        let nodesnow = JSON.parse(JSON.stringify(this.listall[k].nodes));\r\n                        nodesnow = nodesnow.filter(d => {\r\n                            return d.group !== 1 && d.group !== 2\r\n                        });\r\n                        //删除与component相关的连线\r\n                        for (let j = 0; j < links1.length; j++) {\r\n                            if (links1[j].source.id === willbesplited[i].id) {\r\n                                links1.splice(j, 1);\r\n                                j--;\r\n                                continue\r\n                            }\r\n                            else if (links1[j].target.id === willbesplited[i].id) {\r\n                                links1.splice(j, 1);\r\n                                j--;\r\n                                continue\r\n                            }\r\n                            midnode = nodes1.filter(d => {\r\n                                return d.id === links1[j].source.id\r\n                            })\r\n                            links1[j].source = midnode[0];\r\n                            midnode = nodes1.filter(d => {\r\n                                return d.id === links1[j].target.id\r\n                            })\r\n                            links1[j].target = midnode[0];\r\n                        }\r\n                        //找到与内部相关的连线，添加回links1\r\n                        for (let j = 0; j < links2.length; j++) {\r\n                            for (let nodenum = 0; nodenum < nodesnow.length; nodenum++) {\r\n                                if (nodesnow[nodenum].id === links2[j].source.id) {\r\n                                    midlink = links2[j];\r\n                                    midlink.source = nodesnow[nodenum];\r\n                                    midlink.source.index = midlink.source.index - 1\r\n                                    midnode = nodesnow.filter(d => {\r\n                                        return d.id === links2[j].target.id\r\n                                    })\r\n                                    if (midnode.length > 0) {\r\n                                        midlink.target = midnode[0];\r\n                                        midlink.target.index = midlink.target.index - 1\r\n                                    }\r\n                                    else {\r\n                                        midnode = nodes1.filter(d => {\r\n                                            return d.id === links2[j].target.id\r\n                                        });\r\n                                        if (midnode.length > 0.5) {\r\n                                            midlink.target = midnode[0];\r\n                                        }\r\n                                        else {\r\n                                            for (let newi = 2; newi < this.listall.length; newi++) {\r\n                                                if (newi === k) {\r\n                                                    continue\r\n                                                }\r\n                                                for (let newj = 0; newj < this.listall[newi].nodes.length; newj++) {\r\n                                                    if (this.listall[newi].nodes[newj].id === links2[j].target.id) {\r\n                                                        midnode = nodes1.filter(d => {\r\n                                                            return d.id === this.listall[newi].keyid\r\n                                                        })\r\n\r\n                                                        midlink.target = midnode[0]\r\n                                                        break\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    links1.push(midlink);\r\n                                    links2.splice(j, 1);\r\n                                    j--\r\n                                    break\r\n                                }\r\n                                else if (nodesnow[nodenum].id === links2[j].target.id) {\r\n                                    midlink = links2[j];\r\n                                    midlink.target = nodesnow[nodenum];\r\n                                    midlink.target.index = midlink.target.index - 1\r\n                                    midnode = nodesnow.filter(d => {\r\n                                        return d.id === links2[j].source.id\r\n                                    })\r\n                                    //另一个节点在Component内部\r\n                                    if (midnode.length > 0) {\r\n                                        midlink.source = midnode[0];\r\n                                        midlink.source.index = midlink.source.index - 1\r\n                                    }\r\n                                    //不在\r\n                                    else {\r\n                                        midnode = nodes1.filter(d => {\r\n                                            return d.id === links2[j].source.id\r\n                                        });\r\n                                        if (midnode.length > 0) {\r\n                                            midlink.source = midnode[0];\r\n                                        }\r\n                                        else {\r\n                                            for (let newi = 2; newi < this.listall.length; newi++) {\r\n                                                if (newi === k) {\r\n                                                    continue\r\n                                                }\r\n                                                for (let newj = 0; newj < this.listall[newi].nodes.length; newj++) {\r\n                                                    if (this.listall[newi].nodes[newj].id === links2[j].source.id) {\r\n                                                        midnode = nodes1.filter(d => {\r\n                                                            return d.id === this.listall[newi].keyid\r\n                                                        })\r\n                                                        midlink.source = midnode[0]\r\n\r\n                                                        break\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    links1.push(midlink);\r\n                                    console.log(midlink)\r\n                                    links2.splice(j, 1);\r\n                                    j--;\r\n                                    break\r\n                                }\r\n                            }\r\n                        }\r\n                        for (let j = 0; j < nodes1.length; j++) {\r\n                            if (nodes1[j].id === willbesplited[i].id) {\r\n                                nodes1.splice(j, 1)\r\n                                break;\r\n                            }\r\n                        }\r\n                        nodes1 = nodes1.concat(nodesnow)\r\n                    }\r\n                    if (cycflag) {\r\n                        cycflag = false;\r\n                        this.listall.splice(k, 1)\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n            this.selectedNodes = [];\r\n            this.listall[0].links = links1;\r\n            this.listall[0].nodes = nodes1;\r\n            this.clearGraph();\r\n            this.linksIN = links1;\r\n            this.nodesIN = nodes1;\r\n            this.flag = true;\r\n            this.newflag = false;\r\n            this.svgWidth = 1400;\r\n            this.svgHeight = 800;\r\n            this.message = \"Component Level\";\r\n            this.renderChart();\r\n        },\r\n\r\n        clearGraph() {\r\n            d3.select(this.$refs.chartContainer).selectAll('*').remove(); // 清除之前生成的图像元素\r\n        },\r\n\r\n        switchlevel() {\r\n            this.clearGraph();\r\n            if (this.flag) {\r\n                this.linksIN = this.listall[1].links;\r\n                this.nodesIN = this.listall[1].nodes;\r\n                this.flag = false;\r\n                this.newflag = false;\r\n                this.svgHeight = 1000;\r\n                this.svgWidth = 2400;\r\n                this.message = \"Bottom Level\";\r\n                this.renderChart();\r\n            }\r\n            else {\r\n                this.linksIN = this.listall[0].links;\r\n                this.nodesIN = this.listall[0].nodes;\r\n                this.flag = true;\r\n                this.newflag = false;\r\n                this.svgWidth = 1400;\r\n                this.svgHeight = 800;\r\n                this.message = \"Component Level\";\r\n                console.log(this.listall)\r\n                this.renderChart();\r\n            }\r\n        },\r\n        backtoComponent() {\r\n            this.clearGraph();\r\n            this.linksIN = this.listall[0].links;\r\n            this.nodesIN = this.listall[0].nodes;\r\n            this.flag = true;\r\n            this.svgWidth = 1400;\r\n            this.svgHeight = 800;\r\n            this.message = \"Component Level\";\r\n            this.newflag = false;\r\n            this.renderChart();\r\n        },\r\n        ticked() {\r\n            const link = this.$refs.chartContainer.querySelectorAll('line');\r\n            const circle = this.$refs.chartContainer.querySelectorAll('circle');\r\n            const rects = this.$refs.chartContainer.querySelectorAll('rect');\r\n            const textInner = this.$refs.chartContainer.querySelectorAll('.text-inner');\r\n            const textLeft = this.$refs.chartContainer.querySelectorAll('.text-left');\r\n            const textRight = this.$refs.chartContainer.querySelectorAll('.text-right');\r\n            const textLink = this.$refs.chartContainer.querySelectorAll('.text-link');\r\n            const textBottom = this.$refs.chartContainer.querySelectorAll('.text-bottom');\r\n\r\n            link.forEach(lk => {\r\n                // 使连线的结束位置在圆形结点边界上而非圆心\r\n                const x1 = lk.__data__.source.x;\r\n                const y1 = lk.__data__.source.y;\r\n                const x2 = lk.__data__.target.x;\r\n                const y2 = lk.__data__.target.y;\r\n                const theta = Math.atan2((y2 - y1), (x2 - x1));\r\n                lk.setAttribute('x1', x1);\r\n                lk.setAttribute('y1', y1);\r\n                lk.setAttribute('x2', x2 - 18 * Math.cos(theta));\r\n                lk.setAttribute('y2', y2 - 18 * Math.sin(theta));\r\n                // lk.setAttribute('x1', lk.__data__.source.x);\r\n                // lk.setAttribute('y1', lk.__data__.source.y);\r\n                // lk.setAttribute('x2', lk.__data__.target.x);\r\n                // lk.setAttribute('y2', lk.__data__.target.y);\r\n            });\r\n\r\n            circle.forEach(nd => {\r\n                nd.setAttribute('cx', nd.__data__.x);\r\n                nd.setAttribute('cy', nd.__data__.y);\r\n            });\r\n\r\n            rects.forEach(td => {\r\n                if (td.classList.contains('Component')) {\r\n                    td.setAttribute('x', td.__data__.x - 25);\r\n                    td.setAttribute('y', td.__data__.y - 15);\r\n                }\r\n            });\r\n\r\n            textInner.forEach(td => {\r\n                td.setAttribute('x', td.__data__.x);\r\n                td.setAttribute('y', td.__data__.y);\r\n            });\r\n\r\n            textLeft.forEach(tld => {\r\n                tld.setAttribute('x', tld.__data__.x - this.nodeRadius - 20);\r\n                tld.setAttribute('y', tld.__data__.y);\r\n            });\r\n            textRight.forEach(trd => {\r\n                trd.setAttribute('x', trd.__data__.x + this.nodeRadius + 20);\r\n                trd.setAttribute('y', trd.__data__.y);\r\n            });\r\n            textBottom.forEach(trd => {\r\n                trd.setAttribute('x', trd.__data__.x);\r\n                trd.setAttribute('y', trd.__data__.y + this.nodeRadius + 10);\r\n            });\r\n            textLink.forEach(tl => {\r\n                tl.setAttribute('x', 0.5 * (tl.__data__.source.x + tl.__data__.target.x));\r\n                tl.setAttribute('y', 0.5 * (tl.__data__.source.y + tl.__data__.target.y));\r\n            });\r\n\r\n        },\r\n\r\n        dragstarted(event) {\r\n            if (!event.active) this.simulation.alphaTarget(0.3).restart();\r\n            event.subject.fx = event.subject.x;\r\n            event.subject.fy = event.subject.y;\r\n        },\r\n\r\n        dragged(event, d) {\r\n            if (d.group === 1 || d.group === 2) {\r\n                event.subject.fy = event.y; // 只更新 y，保持 x 固定\r\n            } else {\r\n                event.subject.fx = event.x;\r\n                event.subject.fy = event.y;\r\n            }\r\n\r\n        },\r\n\r\n        dragended(event, d) {\r\n            if (!event.active) this.simulation.alphaTarget(0);\r\n            if (d.group !== 1 && d.group !== 2) {\r\n                event.subject.fx = null;\r\n            }\r\n            event.subject.fy = null;\r\n        },\r\n\r\n        assignTextColor(d) {\r\n            if (d.group === 1 || d.group === 2) {\r\n                return \"white\"\r\n            }\r\n            else {\r\n                return \"black\"\r\n            }\r\n        }\r\n    },\r\n\r\n    beforeUnmount() {\r\n        // 停止模拟\r\n        if (this.simulation) {\r\n            this.simulation.stop();\r\n        }\r\n    },\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 全局样式 */\r\n.button-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    position: fixed;\r\n    /* 或者使用 fixed 根据需求 */\r\n    top: 20;\r\n    left: 0;\r\n    right: 0;\r\n}\r\n</style>\r\n","import { render } from \"./TopLevel.vue?vue&type=template&id=4f01d6e6\"\nimport script from \"./TopLevel.vue?vue&type=script&lang=js\"\nexport * from \"./TopLevel.vue?vue&type=script&lang=js\"\n\nimport \"./TopLevel.vue?vue&type=style&index=0&id=4f01d6e6&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=c820db52\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=c820db52&lang=scss\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n  },\n  getters: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\n// import router from './router'\r\nimport store from './store'\r\n\r\n// createApp(App).use(store).use(router).mount('#app')\r\nconst app = createApp(App).use(store)\r\n\r\n\r\napp.config.globalProperties.$basePath = process.env.NODE_ENV === 'production'\r\n    ? '/network-vis/'\r\n    : '/';\r\n\r\napp.mount('#app')\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksiemens_component\"] = self[\"webpackChunksiemens_component\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(6350); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_TopLevel","_createElementBlock","_createElementVNode","onClick","_cache","$event","$options","Componentcombine","switchlevel","splitcom","Rename","$data","newflag","backtoComponent","_toDisplayString","message","ref","key","componentKey","name","data","nodesIN","linksIN","listall","simulation","svgWidth","svgHeight","nodeRadius","flag","selectedNodes","componentNum","timer","isCtrlKeyPressed","flagselect","mounted","style","document","createElement","innerHTML","head","appendChild","response1","fetch","this","$basePath","ok","Error","graphData1","json","nodes2","nodes","map","d","links2","links","response2","graphData2","nodes1","links1","filter","source","target","id","renderChart","midvar","push","clearGraph","response3","graphData3","nodes3","links3","error","console","startLoc","svg","d3","$refs","chartContainer","rect","on","event","attr","offsetX","offsetY","width","height","Math","abs","endLoc","leftTop","rightBottom","selectedNodes11","x","y","log","midselectedNodes","undefined","remove","group","len","length","i","j","splice","repointflag","methods","margin","height1","spacing","forEach","fx","group1Nodes","node","ceil","fy","indexOf","group2Nodes","floor","midnode","midIndex","force","distance","ticked","append","link","selectAll","join","handleNodeClick","handleNodeDoubleClick","each","allCircle","querySelectorAll","cc","setAttribute","assignTextColor","text","title","call","dragstarted","dragged","dragended","JSON","parse","stringify","links1co","Outflag","Inflag","k","comparenode","index","Numstr","String","nameforcom","concat","addele","linksadd","nodescompare","linkscompare","pertoadd","Startnum","Endnum","Nodessave","addnode","addname","vx","vy","_","clearTimeout","setTimeout","rerend","isSelected","keyid","willberename","newname","prompt","willbesplited","cycflag","midlink","nodesnow","nodenum","newi","newj","circle","rects","textInner","textLeft","textRight","textLink","textBottom","lk","x1","__data__","y1","x2","y2","theta","atan2","cos","sin","nd","td","classList","contains","tld","trd","tl","active","alphaTarget","restart","subject","beforeUnmount","stop","__exports__","components","TopLevel","render","createStore","state","getters","mutations","actions","modules","app","createApp","App","use","store","config","globalProperties","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","r","n","getter","__esModule","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}